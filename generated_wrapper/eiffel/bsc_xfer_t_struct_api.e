note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class BSC_XFER_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	control: INTEGER
			-- Access member `control`
		require
			exists: exists
		do
			Result := c_control (item)
		ensure
			result_correct: Result = c_control (item)
		end

	set_control (a_value: INTEGER) 
			-- Change the value of member `control` to `a_value`.
		require
			exists: exists
		do
			set_c_control (item, a_value)
		ensure
			control_set: a_value = control
		end

	rxcnt: INTEGER
			-- Access member `rxCnt`
		require
			exists: exists
		do
			Result := c_rxcnt (item)
		ensure
			result_correct: Result = c_rxcnt (item)
		end

	set_rxcnt (a_value: INTEGER) 
			-- Change the value of member `rxCnt` to `a_value`.
		require
			exists: exists
		do
			set_c_rxcnt (item, a_value)
		ensure
			rxcnt_set: a_value = rxcnt
		end

	rxbuf: POINTER
			-- Access member `rxBuf`
		require
			exists: exists
		do
			Result := c_rxbuf (item)
		ensure
			result_correct: Result = c_rxbuf (item)
		end

	txcnt: INTEGER
			-- Access member `txCnt`
		require
			exists: exists
		do
			Result := c_txcnt (item)
		ensure
			result_correct: Result = c_txcnt (item)
		end

	set_txcnt (a_value: INTEGER) 
			-- Change the value of member `txCnt` to `a_value`.
		require
			exists: exists
		do
			set_c_txcnt (item, a_value)
		ensure
			txcnt_set: a_value = txcnt
		end

	txbuf: POINTER
			-- Access member `txBuf`
		require
			exists: exists
		do
			Result := c_txbuf (item)
		ensure
			result_correct: Result = c_txbuf (item)
		end

feature {NONE} -- Implementation wrapper for struct bsc_xfer_t

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(bsc_xfer_t)"
		end

	c_control (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->control
			]"
		end

	set_c_control (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->control =  (uint32_t)$a_value
			]"
		ensure
			control_set: a_value = c_control (an_item)
		end

	c_rxcnt (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->rxCnt
			]"
		end

	set_c_rxcnt (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->rxCnt =  (int)$a_value
			]"
		ensure
			rxcnt_set: a_value = c_rxcnt (an_item)
		end

	c_rxbuf (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->rxBuf
			]"
		end

	c_txcnt (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->txCnt
			]"
		end

	set_c_txcnt (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->txCnt =  (int)$a_value
			]"
		ensure
			txcnt_set: a_value = c_txcnt (an_item)
		end

	c_txbuf (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((bsc_xfer_t*)$an_item)->txBuf
			]"
		end

end
