note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RAW_WAVE_INFO_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	botcb: INTEGER
			-- Access member `botCB`
		require
			exists: exists
		do
			Result := c_botcb (item)
		ensure
			result_correct: Result = c_botcb (item)
		end

	set_botcb (a_value: INTEGER) 
			-- Change the value of member `botCB` to `a_value`.
		require
			exists: exists
		do
			set_c_botcb (item, a_value)
		ensure
			botcb_set: a_value = botcb
		end

	topcb: INTEGER
			-- Access member `topCB`
		require
			exists: exists
		do
			Result := c_topcb (item)
		ensure
			result_correct: Result = c_topcb (item)
		end

	set_topcb (a_value: INTEGER) 
			-- Change the value of member `topCB` to `a_value`.
		require
			exists: exists
		do
			set_c_topcb (item, a_value)
		ensure
			topcb_set: a_value = topcb
		end

	botool: INTEGER
			-- Access member `botOOL`
		require
			exists: exists
		do
			Result := c_botool (item)
		ensure
			result_correct: Result = c_botool (item)
		end

	set_botool (a_value: INTEGER) 
			-- Change the value of member `botOOL` to `a_value`.
		require
			exists: exists
		do
			set_c_botool (item, a_value)
		ensure
			botool_set: a_value = botool
		end

	topool: INTEGER
			-- Access member `topOOL`
		require
			exists: exists
		do
			Result := c_topool (item)
		ensure
			result_correct: Result = c_topool (item)
		end

	set_topool (a_value: INTEGER) 
			-- Change the value of member `topOOL` to `a_value`.
		require
			exists: exists
		do
			set_c_topool (item, a_value)
		ensure
			topool_set: a_value = topool
		end

	deleted: INTEGER
			-- Access member `deleted`
		require
			exists: exists
		do
			Result := c_deleted (item)
		ensure
			result_correct: Result = c_deleted (item)
		end

	set_deleted (a_value: INTEGER) 
			-- Change the value of member `deleted` to `a_value`.
		require
			exists: exists
		do
			set_c_deleted (item, a_value)
		ensure
			deleted_set: a_value = deleted
		end

	numcb: INTEGER
			-- Access member `numCB`
		require
			exists: exists
		do
			Result := c_numcb (item)
		ensure
			result_correct: Result = c_numcb (item)
		end

	set_numcb (a_value: INTEGER) 
			-- Change the value of member `numCB` to `a_value`.
		require
			exists: exists
		do
			set_c_numcb (item, a_value)
		ensure
			numcb_set: a_value = numcb
		end

	numbool: INTEGER
			-- Access member `numBOOL`
		require
			exists: exists
		do
			Result := c_numbool (item)
		ensure
			result_correct: Result = c_numbool (item)
		end

	set_numbool (a_value: INTEGER) 
			-- Change the value of member `numBOOL` to `a_value`.
		require
			exists: exists
		do
			set_c_numbool (item, a_value)
		ensure
			numbool_set: a_value = numbool
		end

	numtool: INTEGER
			-- Access member `numTOOL`
		require
			exists: exists
		do
			Result := c_numtool (item)
		ensure
			result_correct: Result = c_numtool (item)
		end

	set_numtool (a_value: INTEGER) 
			-- Change the value of member `numTOOL` to `a_value`.
		require
			exists: exists
		do
			set_c_numtool (item, a_value)
		ensure
			numtool_set: a_value = numtool
		end

feature {NONE} -- Implementation wrapper for struct rawWaveInfo_t

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(rawWaveInfo_t)"
		end

	c_botcb (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->botCB
			]"
		end

	set_c_botcb (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->botCB =  (uint16_t)$a_value
			]"
		ensure
			botcb_set: a_value = c_botcb (an_item)
		end

	c_topcb (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->topCB
			]"
		end

	set_c_topcb (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->topCB =  (uint16_t)$a_value
			]"
		ensure
			topcb_set: a_value = c_topcb (an_item)
		end

	c_botool (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->botOOL
			]"
		end

	set_c_botool (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->botOOL =  (uint16_t)$a_value
			]"
		ensure
			botool_set: a_value = c_botool (an_item)
		end

	c_topool (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->topOOL
			]"
		end

	set_c_topool (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->topOOL =  (uint16_t)$a_value
			]"
		ensure
			topool_set: a_value = c_topool (an_item)
		end

	c_deleted (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->deleted
			]"
		end

	set_c_deleted (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->deleted =  (uint16_t)$a_value
			]"
		ensure
			deleted_set: a_value = c_deleted (an_item)
		end

	c_numcb (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numCB
			]"
		end

	set_c_numcb (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numCB =  (uint16_t)$a_value
			]"
		ensure
			numcb_set: a_value = c_numcb (an_item)
		end

	c_numbool (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numBOOL
			]"
		end

	set_c_numbool (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numBOOL =  (uint16_t)$a_value
			]"
		ensure
			numbool_set: a_value = c_numbool (an_item)
		end

	c_numtool (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numTOOL
			]"
		end

	set_c_numtool (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawWaveInfo_t*)$an_item)->numTOOL =  (uint16_t)$a_value
			]"
		ensure
			numtool_set: a_value = c_numtool (an_item)
		end

end
