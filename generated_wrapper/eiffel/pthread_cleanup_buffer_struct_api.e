note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PTHREAD_CLEANUP_BUFFER_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	routine: POINTER
			-- Access member `__routine`
		require
			exists: exists
		do
			Result := c_routine (item)
		ensure
			result_correct: Result = c_routine (item)
		end

	set_routine (a_value: POINTER) 
			-- Change the value of member `__routine` to `a_value`.
		require
			exists: exists
		do
			set_c_routine (item, a_value)
		ensure
			routine_set: a_value = routine
		end

	arg: POINTER
			-- Access member `__arg`
		require
			exists: exists
		do
			Result := c_arg (item)
		ensure
			result_correct: Result = c_arg (item)
		end

	set_arg (a_value: POINTER) 
			-- Change the value of member `__arg` to `a_value`.
		require
			exists: exists
		do
			set_c_arg (item, a_value)
		ensure
			arg_set: a_value = arg
		end

	canceltype: INTEGER
			-- Access member `__canceltype`
		require
			exists: exists
		do
			Result := c_canceltype (item)
		ensure
			result_correct: Result = c_canceltype (item)
		end

	set_canceltype (a_value: INTEGER) 
			-- Change the value of member `__canceltype` to `a_value`.
		require
			exists: exists
		do
			set_c_canceltype (item, a_value)
		ensure
			canceltype_set: a_value = canceltype
		end

	prev: detachable PTHREAD_CLEANUP_BUFFER_STRUCT_API 
			-- Access member `__prev`
		require
			exists: exists
		do
			if attached c_prev (item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_prev (item) = default_pointer 
			result_not_void: attached Result as l_result implies l_result.item = c_prev (item) 
		end

	set_prev (a_value: PTHREAD_CLEANUP_BUFFER_STRUCT_API) 
			-- Set member `__prev`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_prev (item, a_value.item)
		ensure
			prev_set: attached prev as l_value implies l_value.item = a_value.item
		end

feature {NONE} -- Implementation wrapper for struct struct _pthread_cleanup_buffer

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(struct _pthread_cleanup_buffer)"
		end

	c_routine (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__routine
			]"
		end

	set_c_routine (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__routine =  (void (*) (void *anonymous_1))$a_value
			]"
		ensure
			routine_set: a_value = c_routine (an_item)
		end

	c_arg (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__arg
			]"
		end

	set_c_arg (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__arg =  (void*)$a_value
			]"
		ensure
			arg_set: a_value = c_arg (an_item)
		end

	c_canceltype (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__canceltype
			]"
		end

	set_c_canceltype (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__canceltype =  (int)$a_value
			]"
		ensure
			canceltype_set: a_value = c_canceltype (an_item)
		end

	c_prev (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__prev
			]"
		end

	set_c_prev (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct _pthread_cleanup_buffer*)$an_item)->__prev =  (struct _pthread_cleanup_buffer*)$a_value
			]"
		ensure
			prev_set: a_value = c_prev (an_item)
		end

end
