note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class GPIO_SAMPLE_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	tick: INTEGER
			-- Access member `tick`
		require
			exists: exists
		do
			Result := c_tick (item)
		ensure
			result_correct: Result = c_tick (item)
		end

	set_tick (a_value: INTEGER) 
			-- Change the value of member `tick` to `a_value`.
		require
			exists: exists
		do
			set_c_tick (item, a_value)
		ensure
			tick_set: a_value = tick
		end

	level: INTEGER
			-- Access member `level`
		require
			exists: exists
		do
			Result := c_level (item)
		ensure
			result_correct: Result = c_level (item)
		end

	set_level (a_value: INTEGER) 
			-- Change the value of member `level` to `a_value`.
		require
			exists: exists
		do
			set_c_level (item, a_value)
		ensure
			level_set: a_value = level
		end

feature {NONE} -- Implementation wrapper for struct gpioSample_t

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(gpioSample_t)"
		end

	c_tick (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((gpioSample_t*)$an_item)->tick
			]"
		end

	set_c_tick (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((gpioSample_t*)$an_item)->tick =  (uint32_t)$a_value
			]"
		ensure
			tick_set: a_value = c_tick (an_item)
		end

	c_level (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((gpioSample_t*)$an_item)->level
			]"
		end

	set_c_level (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((gpioSample_t*)$an_item)->level =  (uint32_t)$a_value
			]"
		ensure
			level_set: a_value = c_level (an_item)
		end

end
