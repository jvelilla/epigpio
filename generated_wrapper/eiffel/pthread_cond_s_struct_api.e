note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PTHREAD_COND_S_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	g_refs: POINTER
			-- Access member `__g_refs`
		require
			exists: exists
		do
			Result := c_g_refs (item)
		ensure
			result_correct: Result = c_g_refs (item)
		end

	g_size: POINTER
			-- Access member `__g_size`
		require
			exists: exists
		do
			Result := c_g_size (item)
		ensure
			result_correct: Result = c_g_size (item)
		end

	g1_orig_size: INTEGER
			-- Access member `__g1_orig_size`
		require
			exists: exists
		do
			Result := c_g1_orig_size (item)
		ensure
			result_correct: Result = c_g1_orig_size (item)
		end

	set_g1_orig_size (a_value: INTEGER) 
			-- Change the value of member `__g1_orig_size` to `a_value`.
		require
			exists: exists
		do
			set_c_g1_orig_size (item, a_value)
		ensure
			g1_orig_size_set: a_value = g1_orig_size
		end

	wrefs: INTEGER
			-- Access member `__wrefs`
		require
			exists: exists
		do
			Result := c_wrefs (item)
		ensure
			result_correct: Result = c_wrefs (item)
		end

	set_wrefs (a_value: INTEGER) 
			-- Change the value of member `__wrefs` to `a_value`.
		require
			exists: exists
		do
			set_c_wrefs (item, a_value)
		ensure
			wrefs_set: a_value = wrefs
		end

	g_signals: POINTER
			-- Access member `__g_signals`
		require
			exists: exists
		do
			Result := c_g_signals (item)
		ensure
			result_correct: Result = c_g_signals (item)
		end

feature {NONE} -- Implementation wrapper for struct struct __pthread_cond_s

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(struct __pthread_cond_s)"
		end

	c_g_refs (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__g_refs
			]"
		end

	c_g_size (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__g_size
			]"
		end

	c_g1_orig_size (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__g1_orig_size
			]"
		end

	set_c_g1_orig_size (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__g1_orig_size =  (unsigned int)$a_value
			]"
		ensure
			g1_orig_size_set: a_value = c_g1_orig_size (an_item)
		end

	c_wrefs (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__wrefs
			]"
		end

	set_c_wrefs (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__wrefs =  (unsigned int)$a_value
			]"
		ensure
			wrefs_set: a_value = c_wrefs (an_item)
		end

	c_g_signals (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct __pthread_cond_s*)$an_item)->__g_signals
			]"
		end

end
