note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class ITIMERSPEC_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	it_interval: TIMESPEC_STRUCT_API
			-- Access member `it_interval`
		require
			exists: exists
		do
			create Result.make_by_pointer ( c_it_interval(item) )
		ensure
			result_not_void: Result.item = c_it_interval (item) 
		end

	set_it_interval (a_value: TIMESPEC_STRUCT_API) 
			-- Set member `it_interval`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_it_interval (item, a_value.item)
		ensure
			it_interval_set: it_interval.item = a_value.item
		end

	it_value: TIMESPEC_STRUCT_API
			-- Access member `it_value`
		require
			exists: exists
		do
			create Result.make_by_pointer ( c_it_value(item) )
		ensure
			result_not_void: Result.item = c_it_value (item) 
		end

	set_it_value (a_value: TIMESPEC_STRUCT_API) 
			-- Set member `it_value`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_it_value (item, a_value.item)
		ensure
			it_value_set: it_value.item = a_value.item
		end

feature {NONE} -- Implementation wrapper for struct struct itimerspec

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(struct itimerspec)"
		end

	c_it_interval (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				&((struct itimerspec*)$an_item)->it_interval
			]"
		end

	set_c_it_interval (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct itimerspec*)$an_item)->it_interval =  *(struct timespec*)$a_value
			]"
		end

	c_it_value (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				&((struct itimerspec*)$an_item)->it_value
			]"
		end

	set_c_it_value (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((struct itimerspec*)$an_item)->it_value =  *(struct timespec*)$a_value
			]"
		end

end
