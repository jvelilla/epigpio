note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class SCHED_FUNCTIONS_API


feature -- Access

	sched_setparam (pid: INTEGER; param: SCHED_PARAM_STRUCT_API): INTEGER 
		do
			Result := c_sched_setparam (pid, param.item)
		ensure
			instance_free: class
		end

	sched_getparam (pid: INTEGER; param: SCHED_PARAM_STRUCT_API): INTEGER 
		do
			Result := c_sched_getparam (pid, param.item)
		ensure
			instance_free: class
		end

	sched_setscheduler (pid: INTEGER; policy: INTEGER; param: SCHED_PARAM_STRUCT_API): INTEGER 
		do
			Result := c_sched_setscheduler (pid, policy, param.item)
		ensure
			instance_free: class
		end

	sched_getscheduler (pid: INTEGER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_getscheduler ((__pid_t)$pid);
			]"
		end

	sched_yield: INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_yield ();
			]"
		end

	sched_get_priority_max (algorithm: INTEGER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_get_priority_max ((int)$algorithm);
			]"
		end

	sched_get_priority_min (algorithm: INTEGER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_get_priority_min ((int)$algorithm);
			]"
		end

	sched_rr_get_interval (pid: INTEGER; t: TIMESPEC_STRUCT_API): INTEGER 
		do
			Result := c_sched_rr_get_interval (pid, t.item)
		ensure
			instance_free: class
		end

feature -- Externals

	c_sched_setparam (pid: INTEGER; param: POINTER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_setparam ((__pid_t)$pid, (struct sched_param const*)$param);
			]"
		end

	c_sched_getparam (pid: INTEGER; param: POINTER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_getparam ((__pid_t)$pid, (struct sched_param*)$param);
			]"
		end

	c_sched_setscheduler (pid: INTEGER; policy: INTEGER; param: POINTER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_setscheduler ((__pid_t)$pid, (int)$policy, (struct sched_param const*)$param);
			]"
		end

	c_sched_rr_get_interval (pid: INTEGER; t: POINTER): INTEGER
		external
			"C inline use <pigpio.h>"
		alias
			"[
				return sched_rr_get_interval ((__pid_t)$pid, (struct timespec*)$t);
			]"
		end

feature -- Externals Address

end
