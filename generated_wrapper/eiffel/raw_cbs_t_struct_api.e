note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RAW_CBS_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	info: INTEGER
			-- Access member `info`
		require
			exists: exists
		do
			Result := c_info (item)
		ensure
			result_correct: Result = c_info (item)
		end

	set_info (a_value: INTEGER) 
			-- Change the value of member `info` to `a_value`.
		require
			exists: exists
		do
			set_c_info (item, a_value)
		ensure
			info_set: a_value = info
		end

	src: INTEGER
			-- Access member `src`
		require
			exists: exists
		do
			Result := c_src (item)
		ensure
			result_correct: Result = c_src (item)
		end

	set_src (a_value: INTEGER) 
			-- Change the value of member `src` to `a_value`.
		require
			exists: exists
		do
			set_c_src (item, a_value)
		ensure
			src_set: a_value = src
		end

	dst: INTEGER
			-- Access member `dst`
		require
			exists: exists
		do
			Result := c_dst (item)
		ensure
			result_correct: Result = c_dst (item)
		end

	set_dst (a_value: INTEGER) 
			-- Change the value of member `dst` to `a_value`.
		require
			exists: exists
		do
			set_c_dst (item, a_value)
		ensure
			dst_set: a_value = dst
		end

	length: INTEGER
			-- Access member `length`
		require
			exists: exists
		do
			Result := c_length (item)
		ensure
			result_correct: Result = c_length (item)
		end

	set_length (a_value: INTEGER) 
			-- Change the value of member `length` to `a_value`.
		require
			exists: exists
		do
			set_c_length (item, a_value)
		ensure
			length_set: a_value = length
		end

	stride: INTEGER
			-- Access member `stride`
		require
			exists: exists
		do
			Result := c_stride (item)
		ensure
			result_correct: Result = c_stride (item)
		end

	set_stride (a_value: INTEGER) 
			-- Change the value of member `stride` to `a_value`.
		require
			exists: exists
		do
			set_c_stride (item, a_value)
		ensure
			stride_set: a_value = stride
		end

	next: INTEGER
			-- Access member `next`
		require
			exists: exists
		do
			Result := c_next (item)
		ensure
			result_correct: Result = c_next (item)
		end

	set_next (a_value: INTEGER) 
			-- Change the value of member `next` to `a_value`.
		require
			exists: exists
		do
			set_c_next (item, a_value)
		ensure
			next_set: a_value = next
		end

	pad: POINTER
			-- Access member `pad`
		require
			exists: exists
		do
			Result := c_pad (item)
		ensure
			result_correct: Result = c_pad (item)
		end

feature {NONE} -- Implementation wrapper for struct rawCbs_t

	sizeof_external: INTEGER 
		external
			"C inline use <pigpio.h>"
		alias
			"sizeof(rawCbs_t)"
		end

	c_info (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->info
			]"
		end

	set_c_info (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->info =  (uint32_t)$a_value
			]"
		ensure
			info_set: a_value = c_info (an_item)
		end

	c_src (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->src
			]"
		end

	set_c_src (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->src =  (uint32_t)$a_value
			]"
		ensure
			src_set: a_value = c_src (an_item)
		end

	c_dst (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->dst
			]"
		end

	set_c_dst (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->dst =  (uint32_t)$a_value
			]"
		ensure
			dst_set: a_value = c_dst (an_item)
		end

	c_length (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->length
			]"
		end

	set_c_length (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->length =  (uint32_t)$a_value
			]"
		ensure
			length_set: a_value = c_length (an_item)
		end

	c_stride (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->stride
			]"
		end

	set_c_stride (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->stride =  (uint32_t)$a_value
			]"
		ensure
			stride_set: a_value = c_stride (an_item)
		end

	c_next (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->next
			]"
		end

	set_c_next (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->next =  (uint32_t)$a_value
			]"
		ensure
			next_set: a_value = c_next (an_item)
		end

	c_pad (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <pigpio.h>"
		alias
			"[
				((rawCbs_t*)$an_item)->pad
			]"
		end

end
